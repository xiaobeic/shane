<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.info.shane.repository.SkillEvaluationMapper" >
  <resultMap id="BaseResultMap" type="com.info.shane.model.SkillEvaluation" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="skills_name" property="skillsName" jdbcType="VARCHAR" />
    <result column="grade" property="grade" jdbcType="INTEGER" />
    <result column="created_date" property="createdDate" jdbcType="TIMESTAMP" />
    <result column="modified_date" property="modifiedDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, skills_name, grade, created_date, modified_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from skill_evaluation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from skill_evaluation
    where user_Id = #{userId,jdbcType=INTEGER}
    order by created_date asc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from skill_evaluation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.info.shane.model.SkillEvaluation" >
    insert into skill_evaluation (id, user_id, skills_name, 
      grade, created_date, modified_date
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{skillsName,jdbcType=VARCHAR}, 
      #{grade,jdbcType=INTEGER}, #{createdDate,jdbcType=TIMESTAMP}, #{modifiedDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.info.shane.model.SkillEvaluation" >
    insert into skill_evaluation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="skillsName != null" >
        skills_name,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="createdDate != null" >
        created_date,
      </if>
      <if test="modifiedDate != null" >
        modified_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="skillsName != null" >
        #{skillsName,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="createdDate != null" >
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedDate != null" >
        #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.info.shane.model.SkillEvaluation" >
    update skill_evaluation
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="skillsName != null" >
        skills_name = #{skillsName,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="createdDate != null" >
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedDate != null" >
        modified_date = #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.info.shane.model.SkillEvaluation" >
    update skill_evaluation
    set user_id = #{userId,jdbcType=INTEGER},
      skills_name = #{skillsName,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=INTEGER},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      modified_date = #{modifiedDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>